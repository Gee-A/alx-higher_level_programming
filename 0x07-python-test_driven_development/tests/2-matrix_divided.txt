========================
``2-matrix_divided`` module
========================

This library uses only ``matrix_divided``
--------------------------------------
``matrix_divided`` Returns a new matrix whose element(to 2dp) 
have been divided by div.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    >>> matrix_divided([[3, 4], [6, 7]], -2)
    [[-1.5, -2.0], [-3.0, -3.5]]

    >>> matrix_divided([[2, 3], [4, 5]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix_divided([1, 2, 3], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([["Alx", "SE"], [6, 7]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[3, 4, 5], [6, 7]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[3, 4], [6, 7]], "Gideon")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided("Gideon", 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[3, 4], [6, 7]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[3, 4]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'